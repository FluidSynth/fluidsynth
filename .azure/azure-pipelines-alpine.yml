
trigger:
  paths:
    include:
      - '*'
    exclude:
      - '.azure/azure-pipelines-android.yml'
      - '.azure/azure-pipelines-mac.yml'
      - '.azure/cmake-android.yml'
      - '.azure/azure-pipelines-vcpkg.yml'
      - '.azure/azure-pipelines-win.yml'
      - '.circleci/config.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/sonarcloud.yml'
      - '.cirrus.yml'
      - 'README.md'

resources:
  containers:
  - container: alpine-linux
    endpoint: 'myDockerHub'
    image: tommoebert332/alpine-cmake:latest

variables:
  AlpineImageName: 'tommoebert332/alpine-cmake:latest'

stages:
- stage: DockerBuild
  displayName: 'Docker Build'
  jobs:
  - job: DockerBuild
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - checkout: self

    - task: Docker@2
      continueOnError: true
      displayName: 'Docker login'
      inputs:
        containerRegistry: 'myDockerHub'
        command: 'login'

    - bash: |
        docker build -f .azure/Dockerfile.azure-alpine \
          -t $(AlpineImageName) \
          .azure
      displayName: 'docker build'

    - bash: |
        docker push $(AlpineImageName)
      displayName: 'docker push'

    - task: Docker@2
      displayName: 'docker logout'
      condition: always()
      inputs:
        command: logout
        containerRegistry: 'myDockerHub'

- stage: FluidAlpineBuild
  displayName: 'Build on alpine'
  jobs:
    - job: Alpine
      pool:
        vmImage: 'ubuntu-20.04'
      container: alpine-linux
      steps:
      - checkout: self
      - task: CMake@1
        displayName: 'CMake configure'
        inputs:
          cmakeArgs: ..
          workingDirectory: 'build'
      - task: CMake@1
        displayName: 'CMake Build'
        inputs:
          cmakeArgs: --build . --parallel
          workingDirectory: 'build'
      - task: CMake@1
        displayName: 'CMake Check'
        inputs:
          cmakeArgs: --build . --target check --parallel
          workingDirectory: 'build'
