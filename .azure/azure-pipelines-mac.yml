
trigger:
  paths:
    include:
      - '*'
    exclude:
      - '.azure/azure-pipelines-android.yml'
      - '.azure/azure-pipelines-vcpkg.yml'
      - '.azure/azure-pipelines-win.yml'
      - '.circleci/config.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/sonarcloud.yml'
      - '.cirrus.yml'
      - 'README.md'

jobs:
- job: macOS_brew
  condition: false
  strategy:
    matrix:
      UnixLibs:
        imageName: 'macos-11'
        CMakeFlags: '-Denable-framework=0'
      10_15:
        imageName: 'macOS-10.15'
        CMakeFlags: ''
      11_0:
        imageName: 'macos-11'
        CMakeFlags: ''
      12_0:
        imageName: 'macos-12'
        CMakeFlags: ''

  pool:
    vmImage: $(imageName)
# recommended by https://github.com/Homebrew/brew/issues/2491#issuecomment-294207661
#        brew update || brew update
#        brew upgrade $PACKAGES
  steps:
    - script: |
        set -ex
        PACKAGES="glib gobject-introspection libsndfile pkg-config jack dbus-glib pulseaudio portaudio sdl2 libomp"
        brew install $PACKAGES
      displayName: 'Prerequisites'
    - script: |
        set -ex
        mkdir build && cd build
        export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
        cmake -Werror=dev $(CMakeFlags) -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 -DNO_GUI=1 ..
        make -j3
      displayName: 'Compile fluidsynth'
    - script: |
        set -ex
        cd build
        make -j3 check
      displayName: 'Execute Unittests'
    - script: |
        set -ex
        cd build
        make -j3 demo
      displayName: 'Compile demos'
    - script: |
        set -ex
        cd build
        sudo make install
        rm -f install_manifest.txt
      displayName: 'Install fluidsynth to default location'
    - script: |
        set -ex
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory) ..
        make install
      displayName: 'Install fluidsynth to artifact dir'


- job: macOS_ports
  strategy:
    matrix:
      10_15_universal:
        macPortsUrl: 'https://github.com/macports/macports-base/releases/download/v2.7.2/MacPorts-2.7.2-10.15-Catalina.pkg'
        imageName: 'macOS-10.15'
        # SDL2/SDL_cpuinfo.h includes some x86 specific headers, which ofc doesn't work when cross compiling for arm64
        CMakeFlags: '-Denable-sdl2=0 -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"'
      11_0_universal:
        macPortsUrl: 'https://github.com/macports/macports-base/releases/download/v2.7.2/MacPorts-2.7.2-11-BigSur.pkg'
        imageName: 'macos-11'
        CMakeFlags: '-Denable-sdl2=0 -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"'

  pool:
    vmImage: $(imageName)
# recommended by https://github.com/Homebrew/brew/issues/2491#issuecomment-294207661
#        brew update || brew update
#        brew upgrade $PACKAGES
  steps:
    - script: |
        set -ex
        brew install wget pkg-config
        wget $(macPortsUrl)
        sudo installer -pkg *.pkg -target /
        rm -f *.pkg
      displayName: 'Prerequisites'
      workingDirectory: $(Agent.TempDirectory)
    - script: |
        export PATH=$PATH:/opt/local/bin
        echo $PATH
        which port
        sudo port install glib2-devel gobject-introspection-devel libsndfile jack dbus-glib pulseaudio libsdl2 libomp-devel +universal
      displayName: 'Port install universal'
    - script: |
        set -ex
        mkdir build && cd build
        export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
        cmake -Werror=dev $(CMakeFlags) -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 -DNO_GUI=1 ..
        make -j3
      displayName: 'Compile fluidsynth'
    - script: |
        set -ex
        cd build
        make -j3 check
      displayName: 'Execute Unittests'
    - script: |
        set -ex
        cd build
        make -j3 demo
      displayName: 'Compile demos'
    - script: |
        set -ex
        cd build
        sudo make install
        rm -f install_manifest.txt
      displayName: 'Install fluidsynth to default location'
    - script: |
        set -ex
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory) ..
        make install
      displayName: 'Install fluidsynth to artifact dir'
