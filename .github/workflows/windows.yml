name: Fluidsynth Windows

on:
  workflow_dispatch:
  pull_request:
  push:
    paths-ignore:
      - '.azure/**'
      - '.circleci/**'
      - '.github/workflows/sonarcloud.yml'
      - '.github/workflows/solaris.yml'
      - '.github/workflows/linux.yml'
      - '.cirrus.yml'
      - 'README.md'

env:
  BUILD_TYPE: RelWithDebInfo
  INSTALL_LOCATION: fluidsynth_install

jobs:
  build:
    runs-on: windows-latest
    strategy:
        fail-fast: false
        matrix:
          include:
            - { icon: 'â¬›', sys: mingw32, osal: glib }
            - { icon: 'ðŸŸ¦', sys: mingw64, osal: glib }
            - { icon: 'ðŸŸ¨', sys: ucrt64, osal: glib }
            - { icon: 'ðŸŸ§', sys: clang64, osal: glib }
            - { icon: 'â¬›', sys: mingw32, osal: cpp11 }
            - { icon: 'ðŸŸ¦', sys: mingw64, osal: cpp11 }
            - { icon: 'ðŸŸ¨', sys: ucrt64, osal: cpp11 }
            - { icon: 'ðŸŸ§', sys: clang64, osal: cpp11 }
    name: ðŸš§${{ matrix.icon }} ${{ matrix.sys }} ${{ matrix.osal }}
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: ${{matrix.sys}}
        install: >-
          make
          libreadline
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p
          glib2:p
          libsndfile:p

    - name: '${{ matrix.icon }} Configure CMake'
      run: cmake -B build -Dosal=${{matrix.osal}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_LOCATION}}

    - name: '${{ matrix.icon }} Build'
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: '${{ matrix.icon }} Test'
      run: cmake --build build --target check

    - name: '${{ matrix.icon }} Demo'
      run: cmake --build build --target demo

    - name: '${{ matrix.icon }} Install'
      run: cmake --install build && ls -la $INSTALL_LOCATION

    - name:  ''
      shell: bash
      working-directory: ${{env.INSTALL_LOCATION}}
      run: |
        if [ ! -f "bin/libfluidsynth-3.dll" ] || [ ! -f "lib/libfluidsynth-3.dll.a" ]; then
          echo "Fluidsynth library has unexpected filename!"
          ls -la . bin lib
          exit -1
        fi

    - name: '${{ matrix.icon }} Upload Artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.INSTALL_LOCATION}}-${{matrix.sys}}-${{matrix.osal}}
        path: ${{env.INSTALL_LOCATION}}
        retention-days: 14
        overwrite: true
